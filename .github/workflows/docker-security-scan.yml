name: Docker Security Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  trivy-docker_bench-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: docker build -t my-image:latest .
    - name: Run Trivy to scan the image for vulnerabilities
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: my-image:latest
        format: 'table'
        output: /github/workspace/trivy-report.txt
        exit-code: '0'  # 将 exit-code 设置为 0，不让构建因漏洞而失败
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'HIGH,CRITICAL'

    - name: Run Docker Bench Security
      run: |
        docker run --net host --pid host --userns host --cap-add audit_control \
        -e DOCKER_CONTENT_TRUST=$DOCKER_CONTENT_TRUST \
        -v /var/lib:/var/lib \
        -v /var/run/docker.sock:/var/run/docker.sock \
        -v /usr/lib/systemd:/usr/lib/systemd \
        -v /etc:/etc \
        --label docker_bench_security \
        docker/docker-bench-security > dockerbench-report.txt


    - name: Fix file permissions
      run: |
        sudo chown runner:docker trivy-report.txt dockerbench-report.txt
        sudo chmod 644 trivy-report.txt dockerbench-report.txt

    - name: Upload Trivy Report as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: trivy-report
        path: trivy-report.txt

    - name: Upload Docker Bench scan results
      uses: actions/upload-artifact@v3
      with:
        name: dockerbench-report
        path: dockerbench-report.txt

    - name: Send Artifact Link to Slack
      if: always()
      env:
        SLACK_OAUTH_TOKEN: ${{ secrets.SLACK_OAUTH_TOKEN }}
        SLACK_CHANNEL: '#trivy'
      run: |
        RUN_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        curl -X POST -H "Authorization: Bearer $SLACK_OAUTH_TOKEN" \
            -H 'Content-type: application/json' \
            --data "{
                \"channel\":\"$SLACK_CHANNEL\",
                \"text\":\"The Trivy scan has completed. You can download the full report from the GitHub Actions artifacts: $RUN_URL\"
            }" \
            https://slack.com/api/chat.postMessage

    - name: Upload Docker Bench Report to Slack
      if: always()
      env:
        SLACK_OAUTH_TOKEN: ${{ secrets.SLACK_OAUTH_TOKEN }}
        SLACK_CHANNEL: '#dockerbench'
      run: |
        curl -F file=@dockerbench-report.txt \
              -F "initial_comment=Here is the Docker Bench security report." \
              -F channels=$SLACK_CHANNEL \
              -H "Authorization: Bearer $SLACK_OAUTH_TOKEN" \
              https://slack.com/api/files.upload



